# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.25)
{
  # A helpful description of your flake
  description = " Simple go http echo server which records requests in an in memory database";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*";
  };

  # Flake outputs that other flakes can use
  outputs =
    {
      self,
      flake-schemas,
      nixpkgs,
    }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "aarch64-darwin" ];
      forEachSupportedSystem =
        f:
        nixpkgs.lib.genAttrs supportedSystems (
          system:
          f {
            pkgs = import nixpkgs { inherit system; };
          }
        );
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      packages = forEachSupportedSystem (
        { pkgs }:
        {
          default = pkgs.buildGoModule {
            pname = "webhook-echo";
            version = "0.1.0";
            src = ./.;
            vendorHash = "sha256-4n3Z3dsP2GtJ9Qdq/v71EjRc4yJYxB7sId9PwIfptjY=";

            buildInputs = [ pkgs.sqlite ];
          };
        }
      );

      apps = forEachSupportedSystem (
        { pkgs }:
        {
          default = {
            type = "app";
            program = "${self.packages.${pkgs.system}.default}/bin/webhook-echo";
          };
        }
      );

      devShells = forEachSupportedSystem (
        { pkgs }:
        {
          default = pkgs.mkShell {
            packages = with pkgs; [
              pkgs.go
              pkgs.gopls
              pkgs.go-tools

              pkgs.sqlite
            ];
          };
        }
      );
    };
}
